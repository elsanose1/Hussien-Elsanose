{{ 'featured-product-grid.css' | asset_url | stylesheet_tag }}

<style>
  .section-{{ section.id }} {
    padding-top: {{ section.settings.mobile_padding_top }}px;
    padding-bottom: {{ section.settings.mobile_padding_bottom }}px;
  }
  @media screen and (min-width:750px) {
    .section-{{ section.id }} {
    padding-top: {{ section.settings.padding_top }}px;
    padding-bottom: {{ section.settings.padding_bottom }}px;
  }
  }
</style>

<div class="featured-product-grid section-{{ section.id }}">
  <div class="page-width">
    <div class="section-header-title">
      {{ section.settings.title }}
    </div>
    <div class="featured-product-grid-wrapper">
      {% for block in section.blocks %}
        <style>
          .product-grid__focal-point--{{ block.id }}{
            {% if block.settings.product.featured_image.presentation.focal_point != blank %}

              left : {{ block.settings.product.featured_image.presentation.focal_point.x  }}%;
              top : {{ block.settings.product.featured_image.presentation.focal_point.y  }}%;
            {% else %}
              left : 75%;
              top : 25%;
            {% endif %}
          }
        </style>
        <div class="product-grid-item">
          <div
            class="product-grid-item__image"
          >
            <img
              src="{{ block.settings.product.featured_image | image_url: width: 432  }}"
              alt="{{ block.settings.product.title }}"
            >
            <div
              class="modal-button-opener product-grid__focal-point product-grid__focal-point--{{ block.id }}"
              data-panel-id="popup-modal-{{ block.id }}"
            >
              +
            </div>
            <div class="popup-modal hidden" id="popup-modal-{{ block.id }}">
              <div class="modal-overlay"></div>
              <div class="modal-panel">
                <div class="panel-close-button">
                  <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 18 18" fill="none">
                    <path d="M5.03784 4.94354L13.5231 13.4288" stroke="black" stroke-width="1.5" stroke-linecap="square" stroke-linejoin="round"/>
                    <path d="M5.03784 13.4285L13.5231 4.94325" stroke="black" stroke-width="1.5" stroke-linecap="square" stroke-linejoin="round"/>
                  </svg>
                </div>
                <div class="panel__product-info">
                  <div class="product-info__image">
                    <img
                      src="{{ block.settings.product.featured_image | image_url: width: 120 , height: 140}}"
                      height="140"
                      width="120"
                      alt="{{ block.settings.product.title }}"
                    >
                  </div>
                  <div class="product-info__content">
                    <h3>{{ block.settings.product.title }}</h3>
                    <p>{{ block.settings.product.price | money }}</p>
                    <div class="product-info__description">
                      {{ block.settings.product.description | truncatewords: 10 }}
                    </div>
                  </div>
                </div>
                {% assign product = block.settings.product %}
                {%- form 'product',
                  product,
                  id: block.id,
                  class: 'form panel__variants-selector',
                  novalidate: 'novalidate',
                  data-type: 'add-to-cart-form'
                -%}
                  <!-- prettier-ignore -->
                  <input
                    type="hidden"
                    name="id"
                    value="{{ product.variants.first.id }}"
                    {% if product.selected_or_first_available_variant.available == false
                      or product.selected_or_first_available_variant == null
                    %}
                      disabled
                    {% endif %}
                    class="product-variant-id"
                  >
                  {% assign options = block.settings.product.options_with_values %}
                  {% assign color_option = options | where: 'name', 'Color' | first %}
                  {% assign size_option = options | where: 'name', 'Size' | first %}

                  <div class="variant-raw">
                    <span>{{ color_option.name }}</span>
                    <div class="color-variant">
                      {% for value in color_option.values %}
                        {% assign variant = product.variants | where: 'option2', value | first %}
                        <label
                          for="variant-{{ variant.id }}"
                          class="color-variant__item"
                          style="border-left: 1px solid {{ value | split: " | " | last }};"
                        >
                          <input
                            id="variant-{{ variant.id }}"
                            type="radio"
                            name="options[Color]"
                            class="hidden"
                            value="{{ variant.id }}"
                            {% if value == color_option.selected_value %}
                              checked
                            {% endif %}
                          >
                          <span
                            style="background-color:{{ value | split: " | " | last }}; width:5px; display:block;"
                          ></span>
                          {{ value }}
                        </label>
                      {% endfor %}
                    </div>
                  </div>
                  <div class="variant-raw">
                    <select name="options[Size]">
                      {% for value in size_option.values %}
                        {% assign variant = product.variants | where: 'option1', value | first %}
                        <option value="{{ variant.id }}">{{ value }}</option>
                      {% endfor %}
                    </select>
                  </div>

                  <div class="product-form__buttons">
                    {%- liquid
                      assign check_against_inventory = true
                      if product.selected_or_first_available_variant.inventory_management != 'shopify' or product.selected_or_first_available_variant.inventory_policy == 'continue'
                        assign check_against_inventory = false
                      endif
                      if product.selected_or_first_available_variant.quantity_rule.min > product.selected_or_first_available_variant.inventory_quantity and check_against_inventory
                        assign quantity_rule_soldout = true
                      endif
                    -%}
                    <button
                      id="ProductSubmitButton-{{ block.id }}"
                      type="submit"
                      name="add"
                      class="product-form__submit button button--full-width button--primary"
                      {% if product.selected_or_first_available_variant.available == false
                        or quantity_rule_soldout
                        or product.selected_or_first_available_variant == null
                      %}
                        disabled
                      {% endif %}
                    >
                      <span>
                        {%- if product.selected_or_first_available_variant == null -%}
                          {{ 'products.product.unavailable' | t }}
                        {%- elsif product.selected_or_first_available_variant.available == false
                          or quantity_rule_soldout
                        -%}
                          {{ 'products.product.sold_out' | t }}
                        {%- else -%}
                          {{ 'products.product.add_to_cart' | t }}
                        {%- endif -%}
                      </span>
                      {%- render 'loading-spinner' -%}
                    </button>
                  </div>
                {%- endform -%}
              </div>
            </div>
          </div>
        </div>
      {% endfor %}
    </div>
  </div>
</div>

<script>
  (function () {
    const variantButtons = document.querySelectorAll('.section-{{ section.id }} .variant-raw input[type="radio"]');
    const variantSelects = document.querySelectorAll('.section-{{ section.id }} .variant-raw select');

    variantButtons.forEach((button) => {
      button.addEventListener('change', function () {
        this.closest('form').querySelector('input[name=id]').value = this.value;
      });
    });

    variantSelects.forEach((variantSelect) => {
      variantSelect.addEventListener('change', function () {
        this.closest('form').querySelector('input[name=id]').value = this.value;
      });
    });
  })();
</script>

{% schema %}
{
  "name": "Featured product grid",
  "settings": [
    {
      "type": "richtext",
      "id": "title",
      "label": "Title",
      "default": "<p>Tisso vison in the wild</p>"
    },
    {
      "type": "header",
      "content": "padding"
    },
    {
      "type": "range",
      "id": "padding_top",
      "label": "Padding top",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 30,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "label": "Padding bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 30,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "mobile_padding_top",
      "label": "Mobile Padding top",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 30,
      "unit": "px"
    },
    {
      "type": "range",
      "id": "mobile_padding_bottom",
      "label": "Mobile Padding bottom",
      "min": 0,
      "max": 100,
      "step": 1,
      "default": 30,
      "unit": "px"
    }
  ],
  "blocks": [
    {
      "type": "product",
      "name": "Product",
      "settings": [
        {
          "type": "product",
          "id": "product",
          "label": "Product"
        },
        {
          "type": "image_picker",
          "id": "featured_image",
          "label": "Image"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Featured product grid"
    }
  ]
}
{% endschema %}
